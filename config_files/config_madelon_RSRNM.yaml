###########
# General #
###########
project_name: "" # baseline for synthetic experiments
experiment_name: "constant_schedule_Mac4"
max_iterations: 2000 #500
tolerance: 1.e-6
# verbose_level: 0 
repetitions: 3 # 3
seed: 31415
# log_every: [25, 25, 25, 25, 25, 25, 1] 
# plot_every: [1,1,1,1,1,1,1]
# plot_schedules: [1,1,1,1,1,1,1]
log_every: [1,1,1,1,1] 
plot_every: [1,1,1,1,1]
plot_schedules: [1,1,1,1,1]

#########
# Data # 
#########

# other possible datasets: 'w1a', 'w8a', 'duke', 'madelon', 'gisette_scale', 'synthetic'
data_path: 'datasets/'
dataset: 'madelon' 


############# 
# Optimizer #
############# 

optimizer: 'RS_RNM' # 'RS_RNM' # possible optimizers: CD, SSCN, RS_RNM

# TODO: currently not considered, only running logsumexp experiments
# possible loss functions: logreg_nonconv, logsumexp, square_loss_w_nonconv_reg, non_linear_least_square_w_nonconv_reg
loss_func: 'logreg_nonconv'

# possible subsolvers: exact, lanczos, cauchy_pt 
subsolver: 'exact'
# possible coordinate schedules: constant, linear, quadratic, exponential, adaptive
coordinate_schedule: 'constant'
lambdas: [1.e-1] # weight of non-convex regularizer
taus: [200, 300]
# taus: [50, 100, 200, 500, 1000, 2000, 5000]
# taus: [100, 1000, 5000]
# for linear schedule: 
scales_lin: [0.1, 0.3, 0.5]
# for quadratic schedule:
scales_quad: [0.001, 0.002]
# for exponential schedule:
cs: [0.01]
exps: [0.001]
# for adaptie schedule:
eps_1: 0.01 
eps_2: 0.01
# for jump schedule, i.e. jumping from one constant coordinate to another const. coordinate schedule after some number of iterations
jump_iters: [0,1000,2000,3000]
jump_coord: 100
